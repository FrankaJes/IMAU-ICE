

=================================
IMAU-ICE v2.0 changelog
=================================

Tijn Berends, September 2021

BIG CHANGES: added DIVA, SELEN, and PETSc.

                             -----  Introduction: DIVA  -----
                                    
  The Depth-Integrated Viscosity Approximation (DIVA) was first described by Goldberg (2011).
It results from vertically integrating the Blatter-Pattyn stress balance, which essentially makes
it the mathematically correct solution to the problem which the hybrid SIA/SSA approximates
heuristically. Since it also includes the stress from longitudinal stretching caused by vertical
shear (i.e. dU_SIA/dx), it is much more accurate than the SIA/SSA for small topographical features.
Goldberg (2011) showed this by performing the ISMIP-HOM experiments, showing that DIVA reproduces
the higher-order / full-Stokes solutions very well up to feature scales of about 20 km.
  The DIVA solver implemented in IMAU-ICE is based on that from Yelmo (Robinson et al., 2020),
which in turn uses the staggered SSA solver from SICOPOLIS (Greve, 1997?). Relative to Yelmo, I
made some minor changes to the way the effective viscosity is staggered, which allows the model
to reproduce the Schoof 2006 analytical SSA solution (something which the original Yelmo code fails
to do), but makes it slightly more difficult to maintain numerical stability. Also, the way grounded
fractions affect the basal friction has been changed, significantly improving grounding-line migration.
Other than that, the solver is functionally identical to the one in Yelmo, although the code has been
heavily restructured to match the rest of IMAU-ICE.

                             -----  Introduction: SELEN  -----

  SELEN (Spada and Stocchi, 2007) is a model that solves the sea-level equation. It includes
the solid-Earth model TABOO (Spada, 2003) to calculate the Love numbers for the solid Earth
deformation part. The gravitationally self-consistent sea-level equation is then solved for
the global ice loading history that is provided by the ice-sheet model, including the effects
of solid-Earth deformation, coastline migration, and (optionally) rotational feedback.
  The version of SELEN implemented in IMAU-ICE was copied from the code of the earlier coupled
model ANICE-SELEN (de Boer et al, 2014). It is not entirely clear which version of SELEN was
included there, but it was substantially changed in order to be incorporated into ANICE. In
order to include it into IMAU-ICE, I thoroughly cleaned up the code; the way data is communicated
between the ice model and SELEN is still mostly the same as in ANICE-SELEN, but it is done much
more clearly and cleanly now. In short: SELEN maintains a global "ice loading history" of the
past 80,000 years (configurable). Every 1,000 years (conf.), it solves the SLE for this entire
history. The results for the last two SELEN time-steps are then used to extrapolate 1,000 years
into the future; the bedrock and geoid deformation rates in IMAU-ICE are then set such that, at
the end of this next 1,000-year interval, the bedrock and geoid match the SELEN prediction.

                             -----  Introduction: PETSc  -----

  The Portable, Extensible Toolkit for Scientific Computation (PETSc) is a library containing
loads of routines for solving matrix equations and non-linear equations. IMAU-ICE now uses PETSc
to solve the ice-dynamical equations (both for velocity and for ice thickness), using a parallelised
iterative matrix solver. This is about twice as fast as the old SOR solver, and also much more stable.
It does however make compiling the model a bit more cumbersome, as you first need to install PETSc.





                             -----  Actual code changes  -----
                             
General:
- Added the option of using a "template + variation" config style. The IMAU_ICE_program
  executable can now be provided either one or two config file names. If only one is provided,
  it works the same as before. When two are provided, both are read, with the values from the second
  overwriting those from the first . This makes it really easy to set up ensemble experiments;
  create a "template" config that describes your default simulation, and then create a set of
  "variation" configs that alter only the variable(s) you're interested in.
- Added the debugging option to check data fields for NaN values (and if found, to report the grid
  cell indices, name of the variable, and name of the subroutine where it was found). Added calls to
  these routine to most ice/thermodynamics/climate/SMB/BMB routines; whether or not a check is
  actually performed is indicated by the config flag "do_check_for_NaN".
- Cleaned up the configuration_module routines.
- Moved initialise_zeta_discretisation to the derivatives_and_grids_module, created a separate
  "zeta" structure in that module to store the coefficients (and removed them from the C structure).

Output:
- Replaced the ASCII text output files with NetCDF files.

Ice dynamics:
- Split the "ice_dynamics_module" into three separate modules: "ice_velocity_module" for
  calculating instantaneous velocities, "ice_thickness_module" for calculating the ice
  thickness change over time for the resulting velocity field, and "ice_dynamics_module"
  for calculating and applying the time step (either directly or using the predictor/corrector
  scheme), as well as some additional routines (removing unconnected shelves, applying boundary
  conditions, etc.).
- Upgraded the SSA/DIVA solver from the regular (A) grid to the staggered (Cx/Cy) grid,
  based on the solver from SICOPOLIS (as included in Yelmo). This also includes the
  "cross-terms" which were previously neglected (can be turned on/off with the config option
  "include_SSADIVA_crossterms_config"), as well as stress boundary conditions for the ice margin
  (although these are turned off by default as they don't seem to work very well; can be chosen
  with the config option "choice_ice_margin_config").
- Added the predictor/corrector method of time integration (with the option of going back
  to the old "direct" method when using SIA/SSA ice dynamics, chosen with the config
  option "choice_timestepping"). Note that for DIVA ice dynamics, this is the only option, since
  the analytical solutions of the diffusive and advective critical time steps don't apply here.
- Added the option to use a semi-implicit method for integration ice thickness through time.
- Added the options to use a Weertman (power-law) sliding law, Note that it currently has
  no spatial variability in basal slipperiness, which should definitely be added in future updates.
- Moved the calculation of "basal conditions" (till friction angle and yield stress in case of
  the (regularised) Coulomb sliding laws, basal slipperiness in case of the Weertman sliding law)
  to the new "basal_conditions_module".
- Added the CISM method of determining sub-grid grounded fractions on all grids (a,b,cx/cy; Leguy
  et al., 2021). These are used to scale beta_eff _AFTER_ staggering it to the cx/cy-grid. This
  results in much better GL migration, without having to use a flux condition (something which I
  spent months trying to implement, without success...).
- Included the three sub-grid schemes for applying basal melt from Leguy et al., 2021), which can
  be selected through the config option "choice_BMB_subgrid".
- Added the option choice_ice_dynamics = 'none', which keeps the ice thickness unchanged. A velocity
  solution is still calculated during initialisation (using the DIVA), so that thermodynamics can
  be run if necessary (useful for thermo spin-ups).

Benchmark experiments:
- Added the Schoof (2006) SSA ice stream experiment. Results match the analytical solution
  at all resolutions. Note though that both the velocity solver and the viscosity iteration need
  a much smaller tolerance in their stop criteria for this to work.
- Added all of the ISMIP-HOM experiments. Config files to run all of them with both the
  old hybrid SIA/SSA and with DIVA are included. Results agree well with those in the
  original DIVA publication by Goldberg (2011); DIVA matches the higher-order results
  for much smaller topographical features than the hybrid SIA/SSA.
- Added the MISMIP_mod experiment. Config files to run this with both SIA/SSA and DIVA ice
  dynamics at different resolutions are included. Results agree reasonably well with those from
  Feldmann et al. (2014) (as in, GL hysteresis is smaller than the grid resolution).

SELEN:
- SELEN is initialised by calling "initialise_SELEN" from IMAU_ICE_program. This subroutine
  loads the global icosahedral Tegmark grid with the global topography data from an external
  NetCDF file, runs TABOO to obtain the solid-Earth Love numbers, sets up the ice loading
  history, creates mapping arrays to map data from the regional ice-model grids to the global
  SELEN grid, and sets up the spherical harmonic coefficients (either by calculating them,
  which takes a while, or by reading them from external binary files in the "SELEN_files"
  directory; a neat little system with header files makes sure the model automatically checks
  if any of the available spherical harmonics files are appropriate for the current model run).
- SELEN is ran by calling "run_SELEN" from IMAU_ICE_program. This subroutine takes all four
  ice model regions as input (only using those that are active), solves the sea-level equation
  for the resulting global ice loading, and sets the bedrock and geoid deformation rates of
  the regions according to the results.
- SELEN is parallelised in much the same way as the rest of IMAU-ICE; one single call to
  "solve_SLE" currently takes about 30 seconds on 24 cores at harmonic degree 64, or about
  3 minutes at degree 128, so that including SELEN in a glacial cycle simulation (120 kyr)
  will add about 1 wall hour (24 CPU hours) at harmonic degree 64, or about 6 wall hours 
  (144 CPU hours) at degree 128.
- Setting up the parallelisation required a few semi-elegant workarounds. As far as I've been
  able to find, MPI shared memory cannot be indexed freely, but always starts at 1 (as God
  intended it). Since a lot of the arrays in SELEN are indexed from 0, this poses a bit of a
  problem. I solved this by including an intermediary pointer, since Fortran allows the indexing
  to change between pointers. This also has the advantage that I can store the actual data in
  a TYPE similar to the rest of IMAU-ICE, but give those intermediary pointers the names they
  used to have in SELEN, so that all the variable names in SELEN can remain the same. This should
  make it easier to upgrade to a new SELEN version in the future. 
- Changed the way the spherical harmonic coefficients are loaded from disk, so not all
  of them are always stored in memory. This drastically reduces memory usage (from ~15 Gb down to
  a few Mb at most), at no noticeable computational expense.
  
Calving:
- Added a simply thickness threshold calving law, combined with a "filled fraction" mask for
  floating ice margin pixels to make sure it is applied correctly. Also included a condition to
  the flux calculation so that ice flow from floating pixels to ice-free ocean pixels is only
  allowed once the floating pixel is completely filled; this significantly reduces the margin
  "flickering" problem. Additionally, the mass balance (surface + basal) is also scaled with
  the floating fraction for calving front pixels.
- Added the config option "do_remove_shelves", which - as the name suggests - forcibly removes
  all floating ice in every time step. Used in the ABUMIP-ABUK experiment.
- Added the config option "remove_shelves_larger_than_PD", which (as the name suggests) removes
  any floating ice in pixels that are ice-free in the PD state. This is used in the relaxation
  phase of the Antarctic spin-up, to make sure the ice shelves stay "nice".

PETSc:
- Currently, only two parts of the model use a sparse matrix solver: "solve_DIVA_stag_linearised"
  in the ice_velocity_module, and "calc_dHi_dt_semiimplicit" in the ice_dynamics_module. Both
  call the "solve_matrix_equation_CSR" routine in the utilities_module, which uses either the
  old SOR solver or the PETSc solver, based on the provided char string "choice_matrix_solver".
  This means it is relatively simple to remove PETSc from the model entirely if the user desires this;
  simply remove the call to "solve_matrix_equation_CSR_PETSc" in the utilities_module, and remove
  the petsc_module from the Makefile.

Climate/SMB (update by L. Stap):
- Added the option to run the model with an externally prescribed climate/SMB forcing, provided on
  either a global lon/lat-grid or a regional x/y-grid. Using this method of forcing can be done by
  setting the config option "choice_forcing_method" to either "climate_direct" or "SMB_direct".
  Choosing between global and regional forcing is done with the config option
  "domain_climate_forcing_config". When using direct climate forcing, temperature and precipitation
  are prescribed, and the SMB is calculated internally by the specified SMB model. When using direct
  SMB forcing, a yearly total SMB is prescribed, as well as yearly mean surface temperature (which is
  still required to run the thermodynamics solver).
  

=================================
IMAU-ICE v1.1.1 changelog
=================================

Tijn Berends, March 2021

Output:
- The user can now specify which data fields are written to the help_fields NetCDF file
	through the config. For a list of which data fields can be chosen, see the "write_help_field"
	subroutine in the "netcdf_module".
- A separate NetCDf file has been added for debugging. At (almost) any point in the code,
	data can be copied to the "debug" structure, which can then be written to the 
	"debug_REG.nc" output file. For example, if we want to inspect SIA ice diffusivity, we add:
	  ...
	  debug%dp_2D_01 = ice%D_SIA_Aa
	  CALL write_to_debug_file
	  ...
	The debug structure currently has the following data fields:
		int_2D_01       : 2D         (x,y     ) integer          fields (01-10 available)
		dp_2D_01        : 2D         (x,y     ) double precision fields (01-20 available)
		dp_3D_01        : 3D         (x,y,zeta) double precision fields (01-10 available)
		dp_2D_monthly_01: 2D monthly (x,y,m   ) double precision fields (01-10 available)
	The user need not worry about the grid sizes for the four model regions, this has been
	taken care of.
	Note also that the debug file has no time dimension; when "write_to_debug_file"
	is called, all data fields in the NetCDF file are overwritten.
	Note also also that the debug data structure is always there, but "write_to_debug_file"
	only does anything if the config option "do_write_debug_data_config" is set to true.
	
Matrix method:
- Added routines that read and map the ICE5G data files, for use as reference ice thickness
  in the GCM snapshots. In ANICE2.1, this was done offline during input file generation.
- Numerous fixes to the way the interpolation weights are calculated.
- Numerous fixed to the way reference absorbed insolation for the GCM snapshots is calculated.

SMB:
- Reverted to the old ANICE2.1 version of the SMB model, with the "broken" refreezing. The new,
  fixed version exists as a subroutine, but is currently not used.
  
BMB:
- Small fixes to the way the interpolation weight are calculated; reintroduced d18O as an
  interpolant, as it was in ANICE2.1
  
Thermodynamics:
- Spatially variable geothermal heat flux from an external NetCDF file added as an option,
	config variable "choice_geothermal_heat_flux" specifies this. Added by Lennert Stap.

Misc.:
- Added a "no ice" mask (region%mask_noice) to prevent the growth of ice in certain specified
  regions, such as Greenland in the NAM and EAS regions, and Ellesmere Island in the GRL
  region. Now it is	no longer needed to remove such regions manually in the input files.
  The no ice mask is applied in the "calculate_ice_thickness_change" of the "ice_dynamics_module";
  at the end of the ice thickness update, ice thickness is set to zero for all pixels where
  region%mask_noice == 1
- Added a small routine to remove "unconnected shelves" (i.e. shelves that are not attached
  to any grounded ice), which would sometimes form in the corners of the model domain if
  the SMB got very high over sea.
- Added a floodfill routine to NAM for determining the ocean mask, so that Hudson Bay becomes
  dry when it is no longer connected to the ocean (this was also done in ANICE2.1).